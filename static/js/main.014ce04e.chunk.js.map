{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/Wrapper.jsx","components/Grid/index.js","components/Button/index.js","components/Input/index.js","components/Form.jsx","components/Table.jsx","components/EmployeeData.jsx","App.js","utils/API.jsx","index.js"],"names":["Nav","className","href","Jumbotron","target","rel","Wrapper","props","Container","fluid","children","Row","Col","size","split","map","join","Button","type","onClick","Input","Form","onSubmit","handleFormSubmit","name","value","stateFilter","onChange","handleInputChange","placeholder","sortName","Table","EmployeeData","alt","src","picture","firstName","lastName","city","state","email","App","useState","users","setUsers","setStateFilter","useEffect","axios","get","then","res","data","results","catch","err","console","log","event","e","preventDefault","filterArr","filter","user","location","toLowerCase","sortedArr","sort","a","b","first","medium","last","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.014ce04e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Employee Directory\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>Employee Directory</h1>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://randomuser.me/\">\r\n        Powered by Random User API\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from 'react'\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"container\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction Button({ type = \"default\", className, children, onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\n// This component lets us use a bootstrap input element without worrying about class names\r\n// or manually wrapping the input with a form-group div\r\n// All of the props passed to this component are spread onto the input element\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\">\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { Container, Row, Col } from \"./Grid\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <form onSubmit={props.handleFormSubmit}>\r\n      <Container>\r\n        <Col size=\"xs-3 sm-12\">\r\n          <Input\r\n            name=\"stateFilter\"\r\n            value={props.stateFilter}\r\n            onChange={props.handleInputChange}\r\n            placeholder=\"Filter by State\"\r\n          />\r\n        </Col>\r\n        <br/>\r\n        <Row>\r\n          <Col size=\"xs-4 sm-6\">\r\n            <Button\r\n              onClick={props.handleFormSubmit}\r\n              type=\"success\"\r\n              className=\"input-lg\"\r\n            >\r\n              Filter By State\r\n            </Button>\r\n          </Col>\r\n          <Col size=\"xs-4 sm-6\">\r\n            <Button\r\n              onClick={props.sortName}\r\n              type=\"success\"\r\n              className=\"input-lg\"\r\n            >\r\n              Sort By Name\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nexport function Table({ children }) {\r\n  return (\r\n    <table className=\"table table-light table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Headshot</th>\r\n          <th>Name</th>\r\n          <th>Location</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst EmployeeData = (props) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img alt=\"userPhoto\" src={props.picture}></img>\r\n      </td>\r\n      <td>\r\n        {props.firstName} {props.lastName}\r\n      </td>\r\n      <td>\r\n        {props.city}, {props.state}\r\n      </td>\r\n      <td>\r\n        {props.email} \r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EmployeeData;","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n// import API from \"./utils/API\";\nimport { getUsers } from \"./utils/API\";\nimport Nav from \"./components/Nav\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Wrapper from \"./components/Wrapper\";\nimport Form from \"./components/Form\";\nimport { Table } from \"./components/Table\";\nimport EmployeeData from \"./components/EmployeeData\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [stateFilter, setStateFilter] = useState(\"\");\n\n  useEffect(() => {\n    getUsers()\n      .then((res) => {\n        // console.log(res.data)\n        setUsers(res.data.results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  console.log(users);\n\n  const sortName = (e) => {\n    e.preventDefault();\n    const sortedArr = users.sort((a, b) => {\n      return a.name.first > b.name.first ? 1 : -1;\n    });\n    // console.log(sortedArr);\n\n    // had to use the spread syntax because React didn't recognize the useState was changing when filtering or sorting\n    setUsers([...sortedArr]);\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    setStateFilter(value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    let value = stateFilter;\n    console.log(stateFilter);\n    let filterArr = users.filter((user) => {\n      if (user.location.state.toLowerCase() === value.toLowerCase()) {\n        return true;\n      }\n    });\n    // console.log(filterArr);\n\n    // had to use the spread syntax because React didn't recognize the useState was changing when filtering or sorting\n    setUsers([...filterArr]);\n  };\n  \n  return (\n    <div className=\"App\">\n      <Nav />\n      <Jumbotron />\n      <Wrapper>\n        <Form\n          value={stateFilter}\n          handleInputChange={handleInputChange}\n          handleFormSubmit={handleFormSubmit}\n          sortName={sortName}\n        />\n        <br />\n        <Table>\n          {users.map((user) => (\n            <EmployeeData\n              key={user.name.first + user.name.last}\n              picture={user.picture.medium}\n              firstName={user.name.first}\n              lastName={user.name.last}\n              city={user.location.city}\n              state={user.location.state}\n              email={user.email}\n            />\n          ))}\n        </Table>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\n\r\nexport function getUsers() {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\")\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}